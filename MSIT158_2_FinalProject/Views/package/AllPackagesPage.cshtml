
@{
    ViewData["Title"] = "AllPackagesPage";
    Layout = "_Layout_Backstage";
}
<div>
    <select id="selector" class="form-select" style="width:10em; margin:1em">
    <option></option>
</select>

    <button class="btn btn-primary" style="margin-left:1em" id="addNew" onclick="window.location.href='@Url.Content("~/package/Create")'">新增包裝</button>
</div>


<section>
    <table class="table">
        <thead>
            <tr>
            </tr>
        </thead>

        <tbody id="table">
        </tbody>
    </table>
</section>

@section Scripts{
    <script>
        const table = document.querySelector("#table");
        const selector = document.querySelector("#selector");

        async function loadInfo() {
            try {
            const response = await fetch('@Url.Content("~/package/AllPackages")')
            if (!response.ok) {
                console.log(`erroe message:${response.status}`)
                return
            }
            const datas = await response.json()
            console.log(datas);
            const package = datas.map(p => {
                return `
                                <tr>
                                <td>${p.packName}</td>
                                <td><img src="${'@Url.Content("~/assets/img/packageimages/")' + p.picture}" alt="${p.packName}" width="100" height="100" /></td>
                                <td>價錢: ${p.price}</td>
                                <td>
                                                        <button type="button" class="btn btn-secondary" name="BEdit" id="BEdit${p.packageId}" >修改</button>
                                                                <button type="button" class="btn btn-danger" name="BDel" id="BDel${p.packageId}">刪除</button></td>
                            </tr>
                        `
            });
            table.innerHTML = package.join("");

                attachEventListeners();
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function loadPackageCategories() {
            try {
                const pCategoryRes = await fetch('@Url.Content("~/package/PackageCategory")')
                if (!pCategoryRes.ok) {
                    console.log(`erroe message:${pCategoryRes.status}`)
                    return
                }
                const pCategoryDatas = await pCategoryRes.json()
                console.log("styles:", pCategoryDatas);
                const seletorPackage = pCategoryDatas.map(s => `<option id="${s.packageStyleId}" value="${s.styleName}">${s.styleName}</option>`)
                selector.innerHTML = seletorPackage.join("");
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function attachEventListeners() {

            BEdit = document.getElementsByName('BEdit');

            BEdit.forEach(button => {
                button.addEventListener('click', e => {
                    const button = e.target.id;
                    const id = button.slice(5);
                    window.location.href = `@Url.Content("~/package/EditPackage")?id=${id}`;

                });
            });
   
            BDel = document.getElementsByName('BDel');

            BDel.forEach(button => {
                button.addEventListener('click', async e => {
                    const button = e.target.id;
                    const id = button.slice(4);

                    try {
                    console.log(id);
                    const delID = await fetch(`@Url.Content("~/package/DeletePackage")?id=${id}`, {
                        method: 'DELETE'
                    });

                    if (!delID.ok) {
                        console.log(`erroe message:${delID.status}`)
                        return
                    } 
                        await loadInfo();
                    } catch (error) {
                        console.error('Error during delete operation:', error);
                    }

                });
            });

        }


        // (async () => {
        //     const response = await fetch('@Url.Content("~/package/AllPackages")')
        //     if (!response.ok) {
        //         console.log(`erroe message:${response.status}`)
        //         return
        //     }
        //     const datas = await response.json()
        //     console.log(datas);
        //     const package = datas.map(p => {
        //         return `
        //                 <tr>
        //                 <td>${p.packName}</td>
        //                 <td><img src="${'@Url.Content("~/assets/img/packageimages/")' + p.picture}" alt="${p.packName}" width="100" height="100" /></td>
        //                 <td>價錢: ${p.price}</td>
        //                 <td>
        //                                         <button type="button" class="btn btn-secondary" name="BEdit" id="BEdit${p.packageId}" >修改</button>
        //                                                 <button type="button" class="btn btn-danger" name="BDel" id="BDel${p.packageId}">刪除</button></td>
        //             </tr>
        //         `
        //     });
        //     table.innerHTML = package.join("");

        //     attachEventListeners();
           

            

        //     const pCategoryRes = await fetch('@Url.Content("~/package/PackageCategory")')
        //     if (!pCategoryRes.ok) {
        //         console.log(`erroe message:${pCategoryRes.status}`)
        //         return
        //     }
        //     const pCategoryDatas = await pCategoryRes.json()
        //     console.log("styles:" , pCategoryDatas);
        //     const seletorPackage = pCategoryDatas.map(s => `<option id="${s.packageStyleId}" value="${s.styleName}">${s.styleName}</option>`)
        //     selector.innerHTML = seletorPackage.join("");


        // })()


        document.addEventListener('DOMContentLoaded', async () => {
            await loadInfo();
            await loadPackageCategories();
        });


        selector.addEventListener("change", async (e) => {
            table.innerHTML = "";
            const selectedOption = e.target.options[e.target.selectedIndex];
            const selectedId = selectedOption.id;
            console.log('Selected option ID:', selectedId);

            const url = `https://localhost:7160/api/TAllPackages/selectID?seletId=${selectedId}`;

            const packageRes = await fetch(url, {
                method: 'POST',
                body: '',
                headers: {
                    'Accept': 'text/plain',
                    'Content-Type': 'application/json'
                }
            });


            if (!packageRes.ok) {
                console.log(`erroe message:${packageRes.status}`)
                    return
                }
            const selePackageDatas = await packageRes.json();
            console.log("selected:" + selePackageDatas);
            const package = selePackageDatas.map(p => {
                return `
                                <tr>
                                <td>${p.packName}</td>
                                <td><img src="${'@Url.Content("~/assets/img/packageimages/")' + p.picture}" alt="${p.packName}" width="100" height="100" /></td>
                                <td>${p.price}</td>
                                         <td>
                                        <button type="button" class="btn btn-secondary"  name="BEdit" id="BEdit${p.packageId}">修改</button>
                                                 <button type="button" class="btn btn-danger">刪除</button></td>
                            </tr>
                        `
            });
            table.innerHTML = package.join("");
            attachEventListeners();
        })
        

    </script>
}




@section Styles {
    <style>

    </style>
}