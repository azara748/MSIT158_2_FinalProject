@model IEnumerable<MSIT158_2_FinalProject.Models.TMember>

@{
    ViewData["Title"] = "List";
    Layout = "_Layout_Backstage";
}

<h1>會員資料一覽表</h1>

<div class="horizontal-group">
    <div id="carouselExampleInterval1" class="carousel slide custom-carousel" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleInterval1" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleInterval1" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleInterval1" data-bs-slide-to="2" aria-label="Slide 3"></button>
            <button type="button" data-bs-target="#carouselExampleInterval1" data-bs-slide-to="3" aria-label="Slide 4"></button>
        </div>
        <div class="rounded-carousel">
            <div class="carousel-inner">
                <div class="carousel-item active" data-bs-interval="5000">
                    <img src="~/img/sdesigner (1).jpeg" class="d-block w-100" alt="Slide 1">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (2).jpeg" class="d-block w-100" alt="Slide 2">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (3).jpeg" class="d-block w-100" alt="Slide 3">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (4).jpeg" class="d-block w-100" alt="Slide 4">
                </div>
            </div>
        </div>
    </div>
    <div id="carouselExampleInterval2" class="carousel slide custom-carousel" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleInterval2" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleInterval2" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleInterval2" data-bs-slide-to="2" aria-label="Slide 3"></button>
            <button type="button" data-bs-target="#carouselExampleInterval2" data-bs-slide-to="3" aria-label="Slide 4"></button>
        </div>
        <div class="rounded-carousel">
            <div class="carousel-inner">
                <div class="carousel-item active" data-bs-interval="5000">
                    <img src="~/img/sdesigner (5).jpeg" class="d-block w-100" alt="Slide 1">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (6).jpeg" class="d-block w-100" alt="Slide 2">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (7).jpeg" class="d-block w-100" alt="Slide 3">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (8).jpeg" class="d-block w-100" alt="Slide 4">
                </div>
            </div>
        </div>
    </div>
    <div id="carouselExampleInterval3" class="carousel slide custom-carousel" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleInterval3" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleInterval3" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleInterval3" data-bs-slide-to="2" aria-label="Slide 3"></button>
            <button type="button" data-bs-target="#carouselExampleInterval3" data-bs-slide-to="3" aria-label="Slide 4"></button>
        </div>
        <div class="rounded-carousel">
            <div class="carousel-inner">
                <div class="carousel-item active" data-bs-interval="5000">
                    <img src="~/img/sdesigner (9).jpeg" class="d-block w-100" alt="Slide 1">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (10).jpeg" class="d-block w-100" alt="Slide 2">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (11).jpeg" class="d-block w-100" alt="Slide 3">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (12).jpeg" class="d-block w-100" alt="Slide 4">
                </div>
            </div>
        </div>
    </div>
    <div id="carouselExampleInterval4" class="carousel slide custom-carousel" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleInterval4" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleInterval4" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleInterval4" data-bs-slide-to="2" aria-label="Slide 3"></button>
            <button type="button" data-bs-target="#carouselExampleInterval4" data-bs-slide-to="3" aria-label="Slide 4"></button>
        </div>
        <div class="rounded-carousel">
            <div class="carousel-inner">
                <div class="carousel-item active" data-bs-interval="5000">
                    <img src="~/img/sdesigner (13).jpeg" class="d-block w-100" alt="Slide 1">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (14).jpeg" class="d-block w-100" alt="Slide 2">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (15).jpeg" class="d-block w-100" alt="Slide 3">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (16).jpeg" class="d-block w-100" alt="Slide 4">
                </div>
            </div>
        </div>
    </div>
    <div id="carouselExampleInterval5" class="carousel slide custom-carousel" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleInterval5" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleInterval5" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleInterval5" data-bs-slide-to="2" aria-label="Slide 3"></button>
            <button type="button" data-bs-target="#carouselExampleInterval5" data-bs-slide-to="3" aria-label="Slide 4"></button>
        </div>
        <div class="rounded-carousel">
            <div class="carousel-inner">
                <div class="carousel-item active" data-bs-interval="5000">
                    <img src="~/img/sdesigner (17).jpeg" class="d-block w-100" alt="Slide 1">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (18).jpeg" class="d-block w-100" alt="Slide 2">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (19).jpeg" class="d-block w-100" alt="Slide 3">
                </div>
                <div class="carousel-item" data-bs-interval="5000">
                    <img src="~/img/sdesigner (20).jpeg" class="d-block w-100" alt="Slide 4">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-3">
    <div class="col-2">
        <select class="form-select" aria-label="Default select example" id="idst1">
        </select>
    </div>
    <div class="col-6">
        <nav>
            <ul class="pagination" id="ul1">
            </ul>
        </nav>
    </div>
    <div class="col-2">
        <select class="form-select" aria-label="Default select example" id="idst2">
            <option value="asc" selected>會員編號升冪</option>
            <option value="desc">會員編號降冪</option>
        </select>
    </div>
    <div class="col-2">
        <input type="search" placeholder="搜尋會員資料" class="form-control" id="inputSearch" />
    </div>
</div>


<div class="row mb-3" id="div2">
@* <div class="form-check form-switch col-1">
    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_1" checked>
    <label class="form-check-label" for="flexSwitchCheckChecked_1">序號</label>
</div>
<div class="form-check form-switch col-1">
    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_2" checked>
    <label class="form-check-label" for="flexSwitchCheckChecked_2">姓名</label>
</div>
<div class="form-check form-switch col-1">
    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_3" checked>
    <label class="form-check-label" for="flexSwitchCheckChecked_3">電子信箱</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_4" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_4">密碼</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_5" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_5">加鹽</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_6" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_6">照片</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_7" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_7">地址</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_8" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_8">手機</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_9" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_9">生日</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_10" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_10">性別</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_11" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_11">點數</label>
</div>
<div class="form-check form-switch col-1">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_12" checked>
        <label class="form-check-label" for="flexSwitchCheckChecked_12">會員等級</label>
</div> *@
</div>

<p>
    <a asp-action="Create" class="btn btn-light">新增會員</a>
</p>

<div class="row row-cols-1 row-cols-md-3 g-4" id="div1">
    <table class="table table-primary table-hover">
        <thead>
            <tr id="idtr1">
                
            </tr>
        </thead>
        <tbody id="idtbody1">
            
        </tbody>
    </table>
</div>
@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MemberId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MemberName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cellphone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sex)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Salt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EMail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Points)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vipid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MemberPhoto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Wallet)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.MemberId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MemberName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cellphone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sex)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Salt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EMail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Points)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vipid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MemberPhoto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Wallet)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table> *@
@section Styles {
    <style>
        .vertical-group {
            display: flex;
            flex-direction: column;
            align-items: center; /* 確保垂直群組的項目水平置中 */
            gap: 20px; /* 調整間距 */
            width: 100%; /* 確保群組佔滿整個寬度 */
        }

        .horizontal-group {
            display: flex;
            flex-direction: row;
            justify-content: center; /* 確保旋轉木馬水平置中 */
            align-items: stretch; /* 伸展項目以填滿容器 */
            gap: 20px; /* 調整間距 */
            margin: 10px auto; /* 左右各250px的間距 */
            width: 100%; /* 確保群組佔滿50%的寬度 */
        }

        .custom-carousel {
            flex: 1; /* 確保旋轉木馬佔據可用空間 */
            width: 30%;
            margin: auto; /* 使旋轉木馬居中 */
        }

        .carousel-item img {
            border-radius: 15px; /* 圓角設置 */
        }

        .rounded-carousel {
            border-radius: 15px; /* 可以根據需求調整框架的圓角大小 */
            overflow: hidden; /* 確保圓角適用於整個框架內容 */
        }
    </style>
}
@section Scripts {
    <script>
        const divSpots = document.querySelector('#div1');
        const divtbody = document.querySelector('#idtbody1');
        const ulPaging = document.querySelector('#ul1');
        const ulPagename = document.querySelector('#ul2');
        const inpSearch = document.querySelector('#inputSearch');
        const sltop = document.querySelector('#idst1');
        const sltop2 = document.querySelector('#idst2');
        const divf = document.querySelector('#div2');
        const thss = document.querySelector('#idtr1');
        const switchnames = [
            '序號',
            '等級',
            '姓名',
            '電子信箱',
            '會員照片',
            '地址',
            '手機',
            '生日',
            '性別',
            '會員等級',
            '消費總額',
            '功能按鈕'
        ];
        //顯示隱藏按鈕
        const switchs = switchnames.map((name, index) => {
            return (`
        <div class="form-check form-switch col-1">
            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked_${index + 1}" checked>
            <label class="form-check-label" for="flexSwitchCheckChecked_${index + 1}">${name}</label>
        </div>`)
        });
        divf.innerHTML = switchs.join("");
        //顯示標題
        const ths = switchnames.map((name, index) => {
            return (`<th scope="col" id="idth${index + 1}">${name}</th>`)
        });
        thss.innerHTML = ths.join("");


        const searchData = {
            "memberId": 0,
            "keyword": "",
            "page": 1,
            "pageSize": 30,
            "sortType": "asc",
            "sortBy": "SpotId"
        };

        const loadMemberList = async () => {
            const url = 'https://localhost:7160/api/TMembers/MemberSearch';
            const response = await fetch(url, {
                method: 'POST',
                body: JSON.stringify(searchData),
                headers: { 'Content-Type': 'application/json' }
            });
            console.log('test1');
            const data = await response.json();
            console.log(data);

            //顯示會員資料
            const MLists = data.membersResult.map(mlist => {
                const { id, memberName, cellphone, address, birthday, sex, password, salt, eMail, points, vip, vipphoto, memberPhoto, wallet } = mlist;

                return (
                    `
                        <tr id="member-row-${id}">
                            <th scope="row" id="idtd1">${id}</th>
                            <td id="idtd2">${vipphoto ? `<img style="width: 30px; object-fit: contain;" src="data:image/jpeg;base64,${vipphoto}" alt="圖示"/>` : '無'}</td>
                            <td id="idtd3">${memberName}</td>
                            <td id="idtd4">${eMail}</td>
                            <td id="idtd5">${memberPhoto ? `<img style="width: 50px; object-fit: contain;" src="${memberPhoto}" alt="圖示"/>` : '無'}</td>
                            <td id="idtd6">${address}</td>
                            <td id="idtd7">${cellphone}</td>
                            <td id="idtd8">${birthday}</td>
                            <td id="idtd9">${sex}</td>
                            <td id="idtd10">${vip}</td>
                            <td id="idtd11" class="sumAmount-${id}">加載中...</td>
                            <td id="idtd12">
                            <a href="/Member/Edit/${id}" class="btn btn-success">修改</a>
                            <a href="#" class="btn btn-warning" onclick="return deleteMember(${id})">刪除</a>
                            </td>
                        </tr>
                    `
                );
            });
            // 將生成的表格行字符串加入到 `tbody` 中
            divtbody.innerHTML = MLists.join("");

            //異步加載每個會員的消費總額
            data.membersResult.forEach(async mlist => {
                const { id } = mlist;
                const urlB = `https://localhost:7160/api/TMembers/MemberSumAmount${id}`;
                const responseB = await fetch(urlB);
                const sumAmountData = await responseB.json();
                const sumAmount = sumAmountData.total;
                // 格式化 sumAmount 為貨幣格式
                const formattedSumAmount = new Intl.NumberFormat('zh-TW', { style: 'currency', currency: 'TWD' }).format(sumAmount);
                document.querySelector(`.sumAmount-${id}`).innerText = formattedSumAmount;
            });

            //顯示分頁按鈕
            let liPages = "";
            for (let i = 1, max = data.totalPages; i <= max; i++) {
                liPages += `<li class="page-item" onclick="pagingHandler(${i})"><a class="page-link">${i}</a></li>`
            }
            ulPaging.innerHTML = liPages;
            //隱藏功能開關
            displaybtn();

        };
        loadMemberList();

        //刪除會員
        const deleteMember = async (id) => {
            if (confirm('確定要刪除嗎?')) {
                const urlA = `https://localhost:7160/api/TMembers/MemberDelete${id}`;
                const response = await fetch(urlA);
                if (response.ok) {
                    alert('刪除成功');
                    loadMemberList();
                } else {
                    alert('刪除失敗');
                }
            }
            return false;
        };

        //顯示選擇頁數按鈕
        let sltPages = "";
        for (let i = 30, max = 50; i <= max; i += 10) {
            sltPages += `<option value="${i}">每頁${i}筆資料</option>`
        }
        sltop.innerHTML = sltPages;
        //搜尋欄
        inpSearch.addEventListener('keydown', event => {
            if (event.keyCode === 13) {
                console.log(event);
                searchData.keyword = event.target.value;
                searchData.memberId = 0;
                searchData.page = 1;
                loadMemberList();
            }
        })
        //分頁按鈕
        const pagingHandler = page => {
            searchData.page = page;
            loadMemberList();
        }
        //選擇頁數按鈕
        sltop.addEventListener('change', event => {
            searchData.pageSize = event.target.value;
            loadMemberList();
        })
        //選擇排序
        sltop2.addEventListener('change', event => {
            searchData.sortType = event.target.value;
            searchData.page = 1;
            loadMemberList();
        })
        



        //隱藏功能按鈕
        const displaybtn = () => {
            const checks = {};
            const ths = {};
            const tds = {};

            for (let i = 1; i <= 15; i++) {
                checks[i] = document.querySelector(`#flexSwitchCheckChecked_${i}`);
                ths[i] = document.querySelector(`#idth${i}`);
                tds[i] = document.querySelectorAll(`#idtd${i}`);
                checks[i].checked = true;
                ths[i].style.display = '';

                // 使用闭包来保持对 i 的正确引用
                (function (index) {
                    checks[index].addEventListener('change', function () {
                        if (!this.checked) {
                            ths[index].style.display = 'none';
                            for (let j = 0; j < tds[index].length; j++) {
                                tds[index][j].style.display = 'none';
                            }
                        } else {
                            ths[index].style.display = '';
                            for (let j = 0; j < tds[index].length; j++) {
                                tds[index][j].style.display = '';
                            }
                        }
                    });
                })(i);
            }
        };
    </script>
}